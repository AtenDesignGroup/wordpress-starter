/**
 * This JS file was auto-generated via Terser.
 *
 * Contributors should avoid editing this file, but instead edit the associated
 * non minified file file. For more information, check out our engineering docs
 * on how we handle JS minification in our engineering docs.
 *
 * @see: https://evnt.is/dev-docs-minification
 */

tribe.events=tribe.events||{},tribe.events.views=tribe.events.views||{},tribe.events.views.mapEvents={},function($,obj){"use strict";var $document=$(document);obj.selectors={eventCardButton:'[data-js="tribe-events-pro-map-event-card-button"]',eventCardWrapper:'[data-js="tribe-events-pro-map-event-card-wrapper"]',eventCardWrapperActiveClass:".tribe-events-pro-map__event-card-wrapper--active"},obj.deselectAllEvents=function($buttons){$buttons.each((function(index,button){obj.deselectEvent($(button))}))},obj.deselectEvent=function($button){$button.closest(obj.selectors.eventCardWrapper).removeClass(obj.selectors.eventCardWrapperActiveClass.className());var contentId=$button.attr("aria-controls");if(contentId){var $content=$button.closest(obj.selectors.eventCardWrapper).find("#"+contentId);tribe.events.views.accordion.closeAccordion($button,$content)}},obj.selectEvent=function($button){$button.closest(obj.selectors.eventCardWrapper).addClass(obj.selectors.eventCardWrapperActiveClass.className());var contentId=$button.attr("aria-controls");if(contentId){var $content=$button.closest(obj.selectors.eventCardWrapper).find("#"+contentId);tribe.events.views.accordion.openAccordion($button,$content)}},obj.handleEventClick=function(event){var $container=event.data.container,$button=event.data.target,$buttons=event.data.buttons;$container.trigger("beforeMapEventClick.tribeEvents",[$container,$button]),obj.deselectAllEvents($buttons),obj.selectEvent($button),$container.trigger("afterMapEventClick.tribeEvents",[$container,$button])},obj.unbindEvents=function($container){$container.trigger("beforeMapUnbindEvents.tribeEvents",[$container]),$container.find(obj.selectors.eventCardButton).each((function(buttonIndex,button){$(button).off("click",obj.handleEventClick)})),$container.trigger("afterMapUnbindEvents.tribeEvents",[$container])},obj.bindEvents=function(index,$container,data){$container.trigger("beforeMapBindEvents.tribeEvents",[index,$container,data]);var $buttons=$container.find(obj.selectors.eventCardButton);$buttons.each((function(buttonIndex,button){var $button=$(button),eventData={target:$button,buttons:$buttons,container:$container};$button.on("click",eventData,obj.handleEventClick)})),$container.trigger("afterMapBindEvents.tribeEvents",[index,$container,data])},obj.deinitMap=function($container){$container.trigger("beforeMapDeinit.tribeEvents",[$container]),$container.trigger("mapDeinit.tribeEvents",[$container]),$container.trigger("afterMapDeinit.tribeEvents",[$container])},obj.initMap=function(index,$container,data){$container.trigger("beforeMapInit.tribeEvents",[index,$container,data]),$container.trigger("mapInit.tribeEvents",[index,$container,data]),$container.trigger("afterMapInit.tribeEvents",[index,$container,data])},obj.deinit=function(event,jqXHR,settings){var $container=event.data.container;obj.deinitMap($container),obj.unbindEvents($container),$container.off("beforeAjaxSuccess.tribeEvents",obj.deinit)},obj.init=function(event,index,$container,data){"map"===data.slug&&(obj.initMap(index,$container,data),obj.bindEvents(index,$container,data),$container.on("beforeAjaxSuccess.tribeEvents",{container:$container},obj.deinit))},obj.ready=function(){$document.on("afterSetup.tribeEvents",tribe.events.views.manager.selectors.container,obj.init)},$(obj.ready)}(jQuery,tribe.events.views.mapEvents);