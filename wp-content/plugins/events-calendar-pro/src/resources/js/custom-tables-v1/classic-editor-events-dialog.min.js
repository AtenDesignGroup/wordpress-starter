/**
 * This JS file was auto-generated via Terser.
 *
 * Contributors should avoid editing this file, but instead edit the associated
 * non minified file file. For more information, check out our engineering docs
 * on how we handle JS minification in our engineering docs.
 *
 * @see: https://evnt.is/dev-docs-minification
 */

window.tec=window.tec||{},tec.classicEditorEventsDialog=tec.classicEditorEventsDialog||{},function($,obj){obj.selectors={saveButton:'input[name="save"]',publishButton:'input[name="publish"]',communityEventsSubmit:".events-community-submit",deleteButton:"#delete-action a.submitdelete"},obj.l10n=window.tecEventsSeriesClassicEditor,obj.updateType={all:"all",single:"single",upcoming:"upcoming"},obj.phpToMomentDateFormatMap={d:"DD",j:"D",m:"MM",n:"M",Y:"YYYY"},obj.clearDialogContent=function(){tec.editorDialog.el.$instance.empty()},obj.getDialogText=function(settings){return'<div class="tec-events-pro-dialog__text-row"><p class="tec-events-pro-dialog__text">'+settings.text+"</p></div>"},obj.getDialogRadioInput=function(settings){const checked=settings.checked?"checked":"",classes=["tec-events-pro-dialog__input-row","tec-events-pro-dialog__input-row--"+settings.type].concat(settings.classes).join(" "),inputClasses=["tec-events-pro-dialog__radio-input"].concat(settings.inputClasses).join(" "),labelClasses=["tec-events-pro-dialog__radio-input-label"].concat(settings.labelClasses).join(" "),id="tec-events-pro-dialog__radio-input--"+settings.type;let html='<div class="'+classes+'"><input type="radio" name="_tec_update_type" value="'+settings.type+'" class="'+inputClasses+'" id="'+id+'" '+checked+' /><label class="'+labelClasses+'" for="'+id+'">'+settings.label;return settings.labelHelpText&&(html+='<div><em style="font-style: italic; color: gray; font-size: 90%">'+settings.labelHelpText+"</em></div>"),html+="</label></div>",html},obj.setDialogContent=function(contentSettings){contentSettings.forEach((function(settings){"text"===settings.type?tec.editorDialog.el.$instance.append(obj.getDialogText(settings)):tec.editorDialog.el.$instance.append(obj.getDialogRadioInput(settings))}))},obj.getDialogThisEventLabel=function(){const labelPieces=[obj.l10n.thisEvent],datepickerFormat=tecEventSettings.datepickerFormat,momentDateFormat=Object.keys(obj.phpToMomentDateFormatMap).reduce((function(format,phpFormat){return format.replace(phpFormat,obj.phpToMomentDateFormatMap[phpFormat])}),datepickerFormat);let startDateTime=$(tec.classicEditorEvents.selectors.eventStartDate).val(),startDateTimeMomentFormat=momentDateFormat;const isAllDay=$(tec.classicEditorEvents.selectors.allDayCheckbox).is(":checked");isAllDay||(startDateTime+=" "+$(tec.classicEditorEvents.selectors.eventStartTime).val(),startDateTimeMomentFormat+=" H:mma");const startDateTimeMoment=moment(startDateTime,startDateTimeMomentFormat);if(!startDateTimeMoment.isValid())return labelPieces[0];let dateTimeString=startDateTimeMoment.format("MMMM D, YYYY");return dateTimeString+=isAllDay?` ${obj.l10n.allDay}`:tecEventSettings.dateTimeSeparator+startDateTimeMoment.format("H:mma"),dateTimeString="("+dateTimeString+")",labelPieces.push(dateTimeString),labelPieces.join(" ")},obj.getUpdateDialogContentSettings=function(){const settings=[],startDateChanged=tec.classicEditorEventsState.isStateKeyDirty("startDate"),recurrenceRuleChanged=tec.classicEditorEventsState.isOneOfStateKeysDirty(["recurrence","exclusion"]),updateOptions={single:!0,upcoming:!0,all:!0};return!startDateChanged||tecEventDetails&&tecEventDetails.isRdate||(updateOptions.all=!1),recurrenceRuleChanged&&(updateOptions.single=!1),updateOptions.all||updateOptions.single?(updateOptions.single&&settings.push({type:obj.updateType.single,label:obj.getDialogThisEventLabel(),labelHelpText:obj.l10n.thisEventHelpText,classes:[],inputClasses:[],labelClasses:[],checked:!1}),settings.push({type:obj.updateType.upcoming,label:obj.l10n.upcomingSetting,classes:[],inputClasses:[],labelClasses:[],checked:!updateOptions.all}),updateOptions.all&&settings.push({type:obj.updateType.all,label:obj.l10n.allEvents,classes:[],inputClasses:[],labelClasses:[],checked:!0}),settings):(settings.push({type:"text",text:obj.l10n.effectThisAndFollowingEventsWarning}),settings.push({type:obj.updateType.upcoming,label:obj.l10n.upcomingSetting,classes:["hidden"],inputClasses:[],labelClasses:[],checked:!0}),settings)},obj.getDeleteDialogContentSettings=function(){const settings=[];return settings.push({type:obj.updateType.single,label:obj.getDialogThisEventLabel(),classes:[],inputClasses:[],labelClasses:[],checked:!1}),settings.push({type:obj.updateType.upcoming,label:obj.l10n.upcomingSetting,classes:[],inputClasses:[],labelClasses:[],checked:!1}),settings.push({type:obj.updateType.all,label:obj.l10n.allEvents,classes:[],inputClasses:[],labelClasses:[],checked:!0}),settings},obj.handleDialogConfirmButtonClick=function($button,eventHandler,typeName){return function(){if(!$button||!$button.length)return void tec.editorDialog.closeDialog();const selectedOption=tec.editorDialog.el.$instance.find("input:checked").val();if(selectedOption){if("trash"!==typeName)$button.closest("form").append('<input type="hidden" name="'+typeName+'" value="'+selectedOption+'">');else{const oldHref=$button.attr("href");$button.attr("href",oldHref+"&_tec_update_type="+selectedOption)}$button.off("click",eventHandler),$button[0].click()}else tec.editorDialog.closeDialog()}},obj.getUpdateDialogSettings=function($updateButton){return Object.assign({},tec.editorDialog.defaultDialogSettings,{buttons:[{class:"button-primary",text:obj.l10n.okButton,click:obj.handleDialogConfirmButtonClick($updateButton,obj.showUpdatePrompt,"_tec_update_type")}]})},obj.getDeleteDialogSettings=function($deleteButton){return Object.assign({},tec.editorDialog.defaultDialogSettings,{buttons:[{class:"button-primary",text:obj.l10n.okButton,click:obj.handleDialogConfirmButtonClick($deleteButton,obj.showDeletePrompt,"trash")}]})},obj.handleDuplicatedEventSave=function(event){event.preventDefault();const $saveButton=$(event.currentTarget);$saveButton.closest("form").append('<input type="hidden" name="_tec_update_type" value="'+obj.updateType.all+'">'),$saveButton.off("click",obj.showUpdatePrompt),$saveButton.click()},obj.showUpdatePrompt=function(event){tecEventDetails.requiresFirstSave?obj.handleDuplicatedEventSave(event):tec.classicEditorEventsState.initialState.isRecurring&&(event.preventDefault(),tec.editorDialog.el.$instance.attr("title",obj.l10n.editModalTitle),obj.clearDialogContent(),obj.setDialogContent(obj.getUpdateDialogContentSettings()),tec.editorDialog.setDialogSettings(obj.getUpdateDialogSettings($(event.currentTarget))),tec.editorDialog.openDialog())},obj.showDeletePrompt=function(event){tec.classicEditorEventsState.initialState.isRecurring&&(event.preventDefault(),tec.editorDialog.el.$instance.attr("title",obj.l10n.trashRecurringEvent),obj.clearDialogContent(),obj.setDialogContent(obj.getDeleteDialogContentSettings()),tec.editorDialog.setDialogSettings(obj.getDeleteDialogSettings($(event.currentTarget))),tec.editorDialog.openDialog())},obj.bindEvents=function(){const showUpdatePrompt=!tecEventDetails||!tecEventDetails.occurrence||tecEventDetails.occurrence.has_recurrence;$([obj.selectors.saveButton,obj.selectors.communityEventsSubmit].join()).on("click",obj.showUpdatePrompt),showUpdatePrompt&&$(obj.selectors.publishButton).on("click",obj.showUpdatePrompt),$(obj.selectors.deleteButton).on("click",obj.showDeletePrompt)},obj.ready=function(){obj.bindEvents()},$(obj.ready)}(jQuery,tec.classicEditorEventsDialog);